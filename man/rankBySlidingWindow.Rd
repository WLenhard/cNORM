% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/preparation.R
\name{rankBySlidingWindow}
\alias{rankBySlidingWindow}
\title{Determine the norm values of the participants by sliding window (experimental)}
\usage{
rankBySlidingWindow(data, age = "age", raw = "raw", width, method = 4,
  scale = "T", descend = FALSE)
}
\arguments{
\item{data}{data.frame with norm sample data}

\item{age}{the continuous age variable
group to FALSE cancels grouping (data is treated as one goup)}

\item{raw}{name of the raw value variable (default 'raw')}

\item{width}{the width of the sliding window}

\item{method}{Ranking method in case of bindings, please provide an index,
choosin from the following methods: 1 = Blom (1958), 2 = Tukey (1949),
3 = Van der Warden (1952), 4 = Rankit (default), 5 = Levenbach (1953),
6 = Filliben (1975), 7 = Yu & Huang (2001)}

\item{scale}{type of norm scale, either T (default), IQ, z or percentile (= no
transformation); a double vector with the mean and standard deviation can as well,
be provided f. e. c(10, 3) for Wechsler scale index points}

\item{descend}{ranking order (default descent = FALSE): inverses the
ranking order with higher raw values getting lower norm values; relevant
for example when norming error values, where lower values mean higher
performance}
}
\value{
the dataset with the individual percentiles and norm values
}
\description{
WARNING! EXPERIMENTAL! This function assigns a percentile and norm value for each
individual by a sliding window approach. It collects all cases within the range of
the width parameter (x +/- width/2) and applies the ranking. In case of bindings,
the medium rank is used. Ranking and scaling parameters are the same as in
rankByGroup. This function can be directly used with a continuous age variable in
order to avoid grouping. When collecting data on the basis of a continuous age
variable, cases located far from the mean age of the group receive distorted percentiles
and this distortion can be avoided this way.
}
\examples{
# Transformation using a sliding window
normData <- rankBySlidingWindow(elfe, raw="raw", age="group", width=0.5)

# Comparing this to the traditional approach should give us exactly the same
# values, since the sample dataset only has a grouping variable for age
normData2 <- rankByGroup(elfe, group = "group")
mean(normData$normValue - normData2$normValue)
}
\seealso{
rankByGroup
}
